/*!	Transform an Open Group ArchiMate Open Exchange File to SpecIF
	(C)copyright enso managers gmbh (http://enso-managers.de)
	Author: se@enso-managers.de
	License and terms of use: Apache 2.0 (http://www.apache.org/licenses/LICENSE-2.0)
	We appreciate any correction, comment or contribution as Github issue (https://github.com/enso-managers/SpecIF-Tools/issues)
*/
function Archimate2Specif(e,t){"use strict";const s="RC-Diagram",i="RC-Actor",a="RC-State",n="RC-Event",r="RC-Collection",o="RC-Requirement",c="RC-Folder";if("object"!=typeof t||!t.fileName)return null;let l="ArchiMate:",p=Object.assign({fileDate:(new Date).toISOString(),titleLength:96,textLength:8192,strNamespace:l,modelElementClasses:[i,a,n,r],resClassOutline:"SpecIF:Outline",strFolderType:"SpecIF:Heading",strDiagramType:l+"Viewpoint",strDiagramFolderType:"SpecIF:Views",hiddenDiagramProperties:[],includeAllElements:!0,propertyClassesShallHaveDifferentTitles:!1,transformPermissibleStatementsOnly:!1},t),d=(new DOMParser).parseFromString(e,"text/xml"),u=Array.from(d.querySelectorAll("model"));if(u.length<1)return void console.error("ArchiMate Import: Open-Exchange file has no model.");var m={};m.id=u[0].getAttribute("identifier"),m.$schema="https://specif.de/v1.0/schema.json",m.dataTypes=[{id:"DT-ShortString",title:"String ["+p.titleLength+"]",description:"String with max. length "+p.titleLength,type:"xs:string",maxLength:p.titleLength,changedAt:"2016-05-26T08:59:00+02:00"},{id:"DT-Text",title:"Plain or formatted Text",description:"A text string, plain, or formatted with XHTML or markdown",type:"xs:string",changedAt:"2021-02-14T08:59:00+02:00"},{id:"DT-DateTime",title:"Date or Timestamp",description:"Date or Timestamp in ISO-Format",type:"xs:dateTime",changedAt:"2016-05-26T08:59:00+02:00"},{id:"DT-Integer",title:"Integer",description:"A numerical integer value from -32768 to 32768.",type:"xs:integer",changedAt:"2016-05-26T08:59:00+02:00"},{id:"DT-Boolean",title:"Boolean",description:"The Boolean data type.",type:"xs:boolean",changedAt:"2016-05-26T08:59:00+02:00"}],m.propertyClasses=[{id:"PC-Name",title:"dcterms:title",dataType:"DT-ShortString",changedAt:p.fileDate},{id:"PC-Description",title:"dcterms:description",dataType:"DT-Text",changedAt:p.fileDate},{id:"PC-Diagram",title:"SpecIF:Diagram",dataType:"DT-Text",changedAt:p.fileDate},{id:"PC-Notation",title:"SpecIF:Notation",dataType:"DT-ShortString",changedAt:p.fileDate},{id:"PC-Type",title:"dcterms:type",dataType:"DT-ShortString",changedAt:p.fileDate}],m.resourceClasses=[{id:s,title:"SpecIF:View",description:"A 'View' is a graphical model view with a specific communication purpose, e.g. a business process or system composition.",instantiation:["user"],propertyClasses:["PC-Name","PC-Description","PC-Diagram","PC-Type","PC-Notation"],icon:"&#9635;",changedAt:p.fileDate},{id:i,title:"FMC:Actor",description:"An 'Actor' is a fundamental model element type representing an active entity, be it an activity, a process step, a function, a system component or a role.",instantiation:["auto"],propertyClasses:["PC-Name","PC-Description","PC-Type"],icon:"&#9632;",changedAt:p.fileDate},{id:a,title:"FMC:State",description:"A 'State' is a fundamental model element type representing a passive entity, be it a value, a condition, an information storage or even a physical shape.",instantiation:["auto"],propertyClasses:["PC-Name","PC-Description","PC-Type"],icon:"&#9679;",changedAt:p.fileDate},{id:n,title:"FMC:Event",description:"An 'Event' is a fundamental model element type representing a time reference, a change in condition/value or more generally a synchronisation primitive.",instantiation:["auto"],propertyClasses:["PC-Name","PC-Description","PC-Type"],icon:"&#11047;",changedAt:p.fileDate},{id:r,title:"SpecIF:Collection",instantiation:["auto"],description:"A 'Collection' is an arbitrary group of resources linked with a SpecIF:contains statement. It corresponds to a 'Group' in BPMN Diagrams.",propertyClasses:["PC-Name","PC-Description","PC-Type"],icon:"&#11034;",changedAt:p.fileDate},{id:o,title:"IREB:Requirement",description:"A 'Requirement' is a singular documented physical and functional need that a particular design, product or process must be able to perform.",icon:"&#8623;",instantiation:["auto","user"],propertyClasses:["PC-Name","PC-Description","PC-Type"],changedAt:"2021-02-22T08:59:00+02:00"},{id:c,title:p.strFolderType,description:"Folder with title and text for chapters or descriptive paragraphs.",isHeading:!0,instantiation:["auto","user"],propertyClasses:["PC-Name","PC-Description","PC-Type"],changedAt:"2016-05-26T08:59:00+02:00"}],m.statementClasses=[{id:"SC-shows",title:"SpecIF:shows",description:"Statement: Plan shows Model-Element",instantiation:["auto"],propertyClasses:["PC-Type"],subjectClasses:[s],changedAt:p.fileDate},{id:"SC-contains",title:"SpecIF:contains",description:"Statement: Model-Element contains Model-Element",instantiation:["auto"],propertyClasses:["PC-Type"],subjectClasses:p.modelElementClasses,objectClasses:p.modelElementClasses,changedAt:p.fileDate},{id:"SC-writes",title:"SpecIF:writes",description:"Statement: Actor (Role, Function) writes State (Information).",instantiation:["auto"],propertyClasses:["PC-Type"],subjectClasses:[i,n],objectClasses:[a],changedAt:p.fileDate},{id:"SC-reads",title:"SpecIF:reads",description:"Statement: Actor (Role, Function) reads State (Information)",instantiation:["auto"],propertyClasses:["PC-Type"],subjectClasses:[i,n],objectClasses:[a],changedAt:p.fileDate},{id:"SC-accesses",title:"ArchiMate:Access",description:"Statement: Actor (Role, Function) writes and reads State (Information).",instantiation:["auto"],propertyClasses:["PC-Type"],subjectClasses:[i,n],objectClasses:[a],changedAt:p.fileDate},{id:"SC-UmlIsspecializationof",title:"uml:isSpecializationOf",description:"Statement: A state (data-object) is a specialization of a state",instantiation:["auto"],propertyClasses:["PC-Type"],changedAt:p.fileDate},{id:"SC-serves",title:"ArchiMate:Serving",description:"Statement: An element provides its functionality to another element.",instantiation:["auto"],propertyClasses:["PC-Type"],subjectClasses:[i],objectClasses:[i],changedAt:p.fileDate},{id:"SC-influences",title:"SpecIF:influences",description:"Statement: An element affects the implementation or achievement of some motivation element.",instantiation:["auto"],propertyClasses:["PC-Type"],changedAt:p.fileDate},{id:"SC-isAssociatedWith",title:"uml:isAssociatedWith",description:"Statement: Actor (Component,Function) is associated with an Actor (Component,Function).",instantiation:["auto"],propertyClasses:["PC-Type"],changedAt:p.fileDate},{id:"SC-precedes",title:"SpecIF:precedes",description:"A FMC:Actor 'precedes' a FMC:Actor; e.g. in a business process or activity flow.",instantiation:["auto"],propertyClasses:["PC-Type"],subjectClasses:[i,n],objectClasses:[i,n],changedAt:p.fileDate}],m.resources=[],m.statements=[],m.files=[];const h=S(m.id),f="ArchiMate-"+h;Array.from(u[0].children,(e=>{switch(e.nodeName){case"name":m.title=v(e.innerHTML||p.title||p.fileName.split(".")[0],p.titleLength,"Title of model");break;case"documentation":m.description=v(e.innerHTML,p.textLength,"Description of model")}}));let g=new Map;Array.from(d.querySelectorAll("propertyDefinition"),(e=>{let t=e.getAttribute("type");if(["string","date","number","boolean"].includes(t)){let s=e.getAttribute("identifier"),i=j(e,"name");if(p.propertyClassesShallHaveDifferentTitles&&Array.from(g.values()).includes(i)&&(i+=" ("+s+")"),g.set(s,i),p.hiddenDiagramProperties.indexOf(i)<0){let e={id:s,title:i,changedAt:p.fileDate};switch(t){case"string":e.dataType="DT-ShortString";break;case"date":e.dataType="DT-DateTime";break;case"number":e.dataType="DT-Integer";break;case"boolean":e.dataType="DT-Boolean"}m.propertyClasses.push(e)}}else console.warn("ArchiMate Import: Skipping ArchiMate propertyDefinition of type '"+t+"'.")}));let A,C=[],b=[];function y(e,t){Array.from(e.children,(e=>{if("property"==e.nodeName){let s=e.getAttribute("propertyDefinitionRef"),i=j(e,"value");if(s&&i)switch(i=v(i,p.titleLength,"Property value "+s+" of element with id "+t.id),s){case"AUTHOR":t.createdBy=i;break;case"CREATION_DATE":t.createdAt=N(i);break;case"LAST_EDITOR":t.changedBy=i;break;case"DATE_OF_LAST_CHANGE":t.changedAt=N(i);break;default:let a=D(m.propertyClasses,s);if(a>-1){function n(e,t){for(var s of t)if(e.id==s.class)return!0;return!1}let r=m.propertyClasses[a];if(m.propertyClasses.filter((e=>n(e,t.properties)&&e.dataType==r.dataType&&e.title==r.title)).length<1)if(function(e,t){let s=w(m.resourceClasses,e);s.propertyClasses.includes(t)||s.propertyClasses.push(t)}(t.class,s),"DT-DateTime"===r.dataType)t.properties.push({class:s,value:N(i)});else t.properties.push({class:s,value:i})}}}}))}Array.from(d.querySelectorAll("view"),(e=>{if(function(e){var t=Array.from(e.children).filter((e=>"properties"==e.nodeName));if(t[0])for(var s of(t=Array.from(t[0].children).filter((e=>"property"==e.nodeName)),t))if(p.hiddenDiagramProperties.includes(g.get(s.getAttribute("propertyDefinitionRef")))&&"true"==j(s,"value"))return!1;return!0}(e)){let a,n,r,o,c,l,d,u,h=[],f=e.getAttribute("identifier"),A={id:f,class:s,properties:[],changedAt:p.fileDate};function T(e,t){let s="S-"+S("SC-contains"+t+e);D(m.statements,s)<0&&b.push({contains:{id:s,class:"SC-contains",subject:t,object:e,changedAt:p.fileDate},shows:{id:"S-"+S("SC-shows"+f+s),class:"SC-shows",subject:f,object:s,changedAt:p.fileDate}})}function w(e,t){let s=e.getAttribute("elementRef");s&&(I({id:"S-"+S("SC-shows"+f+s),class:"SC-shows",subject:f,object:s,changedAt:p.fileDate}),t&&T(s,t),Array.from(e.children,(e=>{"node"==e.nodeName&&w(e,s)})))}Array.from(e.children,(e=>{switch(e.nodeName){case"name":A.title=v(e.innerHTML,p.titleLength,"Title of diagram with id "+A.id);break;case"documentation":A.properties.push({class:"PC-Description",value:v(e.innerHTML,p.textLength,"Description of diagram with id "+A.id)});break;case"properties":y(e,A);break;case"node":w(e),h.push(e);break;case"connection":let t=e.getAttribute("relationshipRef");t&&I({id:"S-"+S("SC-shows"+f+t),class:"SC-shows",subject:f,object:t,changedAt:p.fileDate})}}));for(var t=1;t<h.length;t++){a=parseInt(h[t].getAttribute("x")),n=parseInt(h[t].getAttribute("y")),r=parseInt(h[t].getAttribute("w")),o=parseInt(h[t].getAttribute("h"));for(var i=0;i<t;i++)c=parseInt(h[i].getAttribute("x")),l=parseInt(h[i].getAttribute("y")),d=parseInt(h[i].getAttribute("w")),u=parseInt(h[i].getAttribute("h")),a+1>c&&n+1>l&&a+r<c+d+1&&n+o<l+u+1?T(h[t].getAttribute("elementRef"),h[i].getAttribute("elementRef")):a<c+1&&n<l+1&&a+r+1>c+d&&n+o+1>l+u&&T(h[i].getAttribute("elementRef"),h[t].getAttribute("elementRef"))}A.properties.push({class:"PC-Type",value:p.strDiagramType});let P=e.getAttribute("viewpoint");P&&A.properties.push({class:"PC-Notation",value:P}),m.resources.push(A),C.push(f)}})),Array.from(d.querySelectorAll("element"),(e=>{let t={id:e.getAttribute("identifier"),properties:[],changedAt:p.fileDate},s=e.getAttribute("xsi:type");switch(s){case"Stakeholder":case"BusinessActor":case"BusinessRole":case"BusinessCollaboration":case"BusinessInterface":case"BusinessProcess":case"BusinessFunction":case"BusinessInteraction":case"BusinessService":case"ApplicationComponent":case"ApplicationCollaboration":case"ApplicationInterface":case"ApplicationFunction":case"ApplicationInteraction":case"ApplicationProcess":case"ApplicationService":case"Node":case"Equipment":case"Facility":case"Device":case"SystemSoftware":case"Path":case"CommunicationNetwork":case"DistributionNetwork":case"TechnologyCollaboration":case"TechnologyInterface":case"TechnologyFunction":case"TechnologyProcess":case"TechnologyInteraction":case"TechnologyService":case"OrJunction":case"AndJunction":t.class=i;break;case"Assessment":case"Goal":case"Capability":case"BusinessObject":case"Contract":case"Representation":case"Material":case"Product":case"DataObject":case"Artifact":case"WorkPackage":case"Deliverable":case"Plateau":case"Gap":case"Outcome":case"Principle":case"Meaning":case"Value":t.class=a;break;case"BusinessEvent":case"ApplicationEvent":case"TechnologyEvent":case"ImplementationEvent":t.class=n;break;case"Location":case"Grouping":t.class=r;break;case"Requirement":case"Constraint":t.class=o;break;default:console.warn("ArchiMate Import: Skipping element with unknown xsi:type '"+s+"'.")}t.class&&(p.includeAllElements||P(t))&&(Array.from(e.children,(e=>{switch(e.nodeName){case"name":t.title=v(e.innerHTML,p.titleLength,"Title of resource with id "+t.id);break;case"documentation":t.properties.push({class:"PC-Description",value:v(e.innerHTML,p.textLength,"Description of resource with id "+t.id)})}})),t.properties.push({class:"PC-Type",value:p.strNamespace+s}),Array.from(e.children,(e=>{if("properties"===e.nodeName)y(e,t)})),m.resources.push(t))})),Array.from(d.querySelectorAll("relationship"),(e=>{let t={id:e.getAttribute("identifier"),subject:e.getAttribute("source"),object:e.getAttribute("target"),properties:[],changedAt:p.fileDate},s=e.getAttribute("xsi:type");switch(s){case"Access":switch(e.getAttribute("accessType")){case"Write":t.class="SC-writes";break;case"Read":t.class="SC-reads";break;case"ReadWrite":case"Access":t.class="SC-accesses"}break;case"Serving":t.class="SC-serves";break;case"Influence":t.class="SC-influences";break;case"Triggering":case"Flow":t.class="SC-precedes";break;case"Composition":case"Aggregation":case"Realization":case"Assignment":t.class="SC-contains";break;case"Specialization":t.class="SC-UmlIsspecializationof";break;case"Association":t.class="SC-isAssociatedWith",t.isUndirected=!e.getAttribute("isDirected");break;default:console.warn("ArchiMate Import: Relationship has unknown xsi:type ",s)}if(t.class&&(p.includeAllElements||P(t)))Array.from(e.children,(e=>{switch(e.nodeName){case"name":t.title=v(e.innerHTML,p.titleLength,"Title of statement with id "+t.id);break;case"documentation":t.description=v(e.innerHTML,p.textLength,"Description of statement with id "+t.id)}})),t.properties.push({class:"PC-Type",value:p.strNamespace+s}),I(t);else{console.info("ArchiMate Import: Skipping relation (statement) with id='"+t.id+"' of xsi:type=\""+s+'", because it is not shown on a visible diagram.');for(var i=m.statements.length-1;i>-1;i--)"SC-shows"==m.statements[i].class&&m.statements[i].object==t.id&&m.statements.splice(i,1)}})),b.forEach((e=>{let t=I(e.contains);t?(e.shows.object=t.id,I(e.shows)):(I(e.shows),console.info("ArchiMate Import: Added an implicit 'contains' statement with subject=\""+e.contains.subject+'" and object="'+e.contains.object+'".'))}));do{A=!1;for(var T=m.statements.length-1;T>-1;T--){let e=m.statements[T];D(m.resources,e.subject)<0||D(m.resources,e.object)<0&&D(m.statements,e.object)<0?(console.warn('ArchiMate Import: Skipping statement  with id="'+e.id+'" of class="'+e.class+'" with subject="'+e.subject+'" and object="'+e.object+'", because subject or object are not listed.'),m.statements.splice(T,1),A=!0):p.transformPermissibleStatementsOnly?k(e)||(console.warn('ArchiMate Import: Skipping statement  with id="'+e.id+'" of class="'+e.class+'" with subject="'+e.subject+'" and object="'+e.object+'", because the subject or object class is not listed with the statement class.'),m.statements.splice(T,1),A=!0):F(e)}}while(A);return m.resources.push({id:f,title:m.title,class:c,properties:[{class:"PC-Description",value:m.description||""},{class:"PC-Type",value:p.resClassOutline}],changedAt:p.fileDate}),m.hierarchies=function(e){const t={id:"FolderDiagrams-"+h,class:c,title:p.strDiagramFolderType,properties:[{class:"PC-Type",value:p.strDiagramFolderType}],changedAt:p.fileDate},s={id:"N-"+S("FolderDiagrams-"+h),resource:"FolderDiagrams-"+h,nodes:[],changedAt:p.fileDate};let i=[{id:"H-"+f,resource:f,nodes:[],changedAt:p.fileDate}];function a(e,t,s){let i=j(e,"label"),a=j(e,"documentation")||"",n="Folder-"+S(i+h);i=v(i,p.titleLength,"Title of folder with id "+n),t.push({id:n,class:c,title:i,properties:[{class:"PC-Description",value:v(a,p.textLength,"Description of folder with id "+n)},{class:"PC-Type",value:p.strFolderType}],changedAt:p.fileDate}),s.push({id:"N-"+S(n),resource:n,nodes:[],changedAt:p.fileDate})}function n(e,t,s){if("item"==e.nodeName){let i=e.getAttribute("identifierRef");i?D(m.resources,i)>-1&&(s.push({id:"N-"+S(i),resource:i,nodes:[],changedAt:p.fileDate}),C.splice(C.indexOf(i),1)):(a(e,t,s),Array.from(e.children,(e=>{n(e,t,s[s.length-1].nodes)})))}}C.length>0&&(e.push(t),i[0].nodes.push(s));return Array.from(d.querySelectorAll("organizations"),(t=>{Array.from(t.children,(t=>{if("item"==t.nodeName)switch(j(t,"label")){case"Views":Array.from(t.children,(t=>{n(t,e,i[0].nodes[0].nodes)}));case"Relations":break;default:a(t,e,i[0].nodes),Array.from(t.children,(e=>{if("item"==e.nodeName){let t=e.getAttribute("identifierRef");i[0].nodes[i[0].nodes.length-1].nodes.push({id:"N-"+S(t),resource:t,changedAt:p.fileDate})}}))}}))})),C.forEach((e=>{D(m.resources,e)>-1&&i[0].nodes[0].nodes.push({id:"N-"+S(e),resource:e,nodes:[],changedAt:p.fileDate})})),i}(m.resources),m;function S(e){for(var t=0,s=0;s<e.length;s++)t=(t<<5)-t+e.charCodeAt(s),t&=t;return t}function D(e,t){if(e&&t){t=t.trim();for(var s=e.length-1;s>-1;s--)if(e[s].id==t)return s}return-1}function w(e,t){if(e&&t)for(var s of(t=t.trim(),e))if(s.id==t)return s}function j(e,t){for(var s of Array.from(e.children))if(s.nodeName==t)return s.innerHTML;return""}function v(e,t,s){let i=e.replace(/^\s\n/gm,"\n");return i&&i.length>t?(console.warn("ArchiMate Import: "+s+" has been truncated because it is too long"),i.slice(0,t)):i}function P(e){if(["SC-contains"].includes(e.class))return!0;for(var t of m.statements)if("SC-shows"==t.class&&t.object==e.id)return!0;return!1}function I(e){for(var t of m.statements)if(t.class==e.class&&(t.subject==e.subject&&t.object==e.object||t.subject==e.object&&t.object==e.subject))return t;m.statements.push(e)}function F(e){if("SC-shows"==e.class)return;let t=w(m.statementClasses,e.class),s=w(m.resources,e.subject).class,i=w(m.resources,e.object).class;t.subjectClasses&&!t.subjectClasses.includes(s)&&(console.info('ArchiMate Import: Adding resourceClass="'+s+'" of subject="'+e.subject+'of statement="'+e.id+(e.title?" with title '"+e.title+"' ":"")+"\" to the statementClass' subject class."),t.subjectClasses.push(s)),t.objectClasses&&!t.objectClasses.includes(i)&&(console.info('ArchiMate Import: Adding resourceClass="'+i+'" of subject="'+e.object+'of statement="'+e.id+(e.title?" with title '"+e.title+"' ":"")+"\" to the statementClass' object class."),t.objectClasses.push(i))}function k(e){if("SC-shows"==e.class)return!0;let t=w(m.statementClasses,e.class),s=w(m.resources,e.subject).class,i=w(m.resources,e.object).class;return(!t.subjectClasses||t.subjectClasses.includes(s))&&(!t.objectClasses||t.objectClasses.includes(i))}function N(e){return e.replace(/(\d\+|\d-)(\d\d)(\d\d)$/,((e,t,s,i)=>t+s+":"+i))}}